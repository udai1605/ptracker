{"version":3,"file":"static/js/377.f0c41ef5.chunk.js","mappings":"4NACMA,EAAe,CACnBC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,UAAW,GACXC,QAAS,IAoBX,EAjBqB,SAACC,GAAW,IAADC,EAAAC,EACxBC,EAAiB,OAALH,QAAK,IAALA,GAAkB,QAAbC,EAALD,EAAOI,mBAAW,IAAAH,GAAc,QAAdC,EAAlBD,EAAoBI,oBAAY,IAAAH,OAA3B,EAALA,EAAkCI,KAMpD,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRL,UAAWA,EACXT,aAAcA,EACde,aARiB,SAACH,GACpBN,EAAMU,eAAeJ,EACvB,EAOIK,MAAM,aAGZ,E,uDCoCA,OAAeC,EAAAA,EAAAA,KAff,SAAyBC,GACvB,MAAO,CACLC,SAAUD,EAAME,aAChBX,YAAaS,EAAMG,eACnBC,UAAWJ,EAAMK,aAErB,IAEA,SAA4BC,GAC1B,MAAO,CACLC,YAAa,SAACC,GAAM,OAAKF,GAASC,EAAAA,EAAAA,IAAYC,GAAQ,EACtDC,eAAgB,SAACD,GAAM,OAAKF,GAASG,EAAAA,EAAAA,IAAeD,GAAQ,EAEhE,GAEA,EArDiB,SAACrB,GAAW,IAADC,EACpBsB,GAAWC,EAAAA,EAAAA,MACTC,GAAoBC,EAAAA,EAAAA,MAApBD,iBACRE,EAAAA,EAAAA,YAAU,WAAO,IAADC,EAAAC,EACRvB,EAAO,CACXwB,OAAa,OAAL9B,QAAK,IAALA,GAAe,QAAV4B,EAAL5B,EAAOc,gBAAQ,IAAAc,GAAW,QAAXC,EAAfD,EAAiBG,iBAAS,IAAAF,OAArB,EAALA,EAA4BG,SAEtChC,EAAMsB,eAAehB,EACvB,GAAG,IAEH,IAAMI,EAAc,eAAAuB,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOhB,GAAM,IAAAiB,EAAAC,EAAAjC,EAAA,OAAA6B,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACpB,MAAVtB,EAAc,CAAAoB,EAAAE,KAAA,SAMd,OANcF,EAAAC,KAAA,EAERpC,GAAIsC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLvB,GAAM,IACTW,QAAc,OAALhC,QAAK,IAALA,GAAe,QAAVsC,EAALtC,EAAOc,gBAAQ,IAAAwB,GAAW,QAAXC,EAAfD,EAAiBP,iBAAS,IAAAQ,OAArB,EAALA,EAA4BP,UAEvCS,EAAAE,KAAA,EACkB3C,EAAMoB,YAAYd,GAAM,KAAD,EAAhCmC,EAAAI,KACTpB,EAAgB,yBAA0B,CAAEqB,QAAS,YAAaL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAElEO,QAAQC,IAAGR,EAAAM,IACXtB,EAAegB,EAAAM,GAAM,CAAED,QAAS,UAAW,yBAAAL,EAAAS,OAAA,GAAAb,EAAA,kBAGhD,gBAfmBc,GAAA,OAAAlB,EAAAmB,MAAA,KAAAC,UAAA,KAiBpB,OACO,OAALrD,QAAK,IAALA,GAAkB,QAAbC,EAALD,EAAOI,mBAAW,IAAAH,OAAb,EAALA,EAAoBqD,yBAClB/C,EAAAA,EAAAA,KAACgD,EAAY,CACXhC,SAAUA,EACVb,eAAgBA,EAChBN,YAAkB,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAOI,aAI5B,G","sources":["components/AddShiftForm.js","containers/AddShift.js"],"sourcesContent":["import ShiftForm from \"../common/shiftForm\";\r\nconst initialState = {\r\n  companyID: \"\",\r\n  location: \"\",\r\n  shiftDate: \"\",\r\n  startTime: \"\",\r\n  endTime: \"\",\r\n};\r\n\r\nconst AddShiftForm = (props) => {\r\n  const companies = props?.companyData?.parttimeList?.data;\r\n\r\n  const handleSubmit = (data) => {\r\n    props.handleShiftAdd(data);\r\n  };\r\n  // const [pickerKey, setPickerKey] = useState(0);\r\n  return (\r\n    <ShiftForm\r\n      companies={companies}\r\n      initialState={initialState}\r\n      handleSubmit={handleSubmit}\r\n      label=\"Add Shift\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddShiftForm;\r\n","import React, { useEffect } from \"react\";\r\nimport AddShiftForm from \"../components/AddShiftForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { addnewShift } from \"../store/actions/ShiftActions\";\r\nimport { getallParttime } from \"../store/actions/CompanyActions\";\r\nconst AddShift = (props) => {\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  useEffect(() => {\r\n    const data = {\r\n      userId: props?.userData?.loginData?.user_id,\r\n    };\r\n    props.getallParttime(data);\r\n  }, []);\r\n\r\n  const handleShiftAdd = async (params) => {\r\n    if (params != null) {\r\n      try {\r\n        const data = {\r\n          ...params,\r\n          user_id: props?.userData?.loginData?.user_id,\r\n        };\r\n        //console.log(data,props?.userData?.loginData)\r\n        const res = await props.addnewShift(data);\r\n        enqueueSnackbar(\"Shift added Successful\", { variant: \"success\" });\r\n      } catch (err) {\r\n        console.log(err);\r\n        enqueueSnackbar(err, { variant: \"error\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    props?.companyData?.isparttimeListFetched && (\r\n      <AddShiftForm\r\n        navigate={navigate}\r\n        handleShiftAdd={handleShiftAdd}\r\n        companyData={props?.companyData}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    userData: state.LoginReducer,\r\n    companyData: state.CompanyReducer,\r\n    ShiftData: state.ShiftReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addnewShift: (params) => dispatch(addnewShift(params)),\r\n    getallParttime: (params) => dispatch(getallParttime(params)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddShift);\r\n"],"names":["initialState","companyID","location","shiftDate","startTime","endTime","props","_props$companyData","_props$companyData$pa","companies","companyData","parttimeList","data","_jsx","ShiftForm","handleSubmit","handleShiftAdd","label","connect","state","userData","LoginReducer","CompanyReducer","ShiftData","ShiftReducer","dispatch","addnewShift","params","getallParttime","navigate","useNavigate","enqueueSnackbar","useSnackbar","useEffect","_props$userData","_props$userData$login","userId","loginData","user_id","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_props$userData2","_props$userData2$logi","wrap","_context","prev","next","_objectSpread","sent","variant","t0","console","log","stop","_x","apply","arguments","isparttimeListFetched","AddShiftForm"],"sourceRoot":""}