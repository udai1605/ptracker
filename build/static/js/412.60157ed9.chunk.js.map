{"version":3,"file":"static/js/412.60157ed9.chunk.js","mappings":"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","sources":["common/components/ui/input.jsx","common/InputTextField.js","common/components/ui/label.jsx","components/SignupPage.js","containers/SignUp.js"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"../../lib/utils\"\r\n\r\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\r\n  return (\r\n    (<input\r\n      type={type}\r\n      className={cn(\r\n        \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...props} />)\r\n  );\r\n})\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n","import React from \"react\";\r\nimport { Input } from \"./components/ui/input\"\r\n\r\nexport const InputTextField = ({ form, field, ...props }) => {\r\n    const { name, value = '' } = field;\r\n    const { handleChange, handleBlur } = form;\r\n    const { label, required, multiline, placeholder, type, size = \"small\", fullWidth = true, helperText, error, className, disabled, inputProps } = props;\r\n\r\n    return (\r\n        <Input\r\n            id={name}\r\n            name={name}\r\n            value={value}\r\n            label={label}\r\n            error={!!error}\r\n            className={className}\r\n            helperText={error ? error : helperText}\r\n            required={required}\r\n            multiline={multiline}\r\n            rows={multiline && 3}\r\n            placeholder={placeholder}\r\n            type={type}\r\n            fullWidth={fullWidth}\r\n            disabled={disabled}\r\n            variant=\"outlined\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            InputProps={inputProps}\r\n        />\r\n    );\r\n};\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"../../lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n","import * as React from \"react\";\r\nimport { Button } from \"../common/components/ui/button\"\r\nimport { InputTextField } from \"../common/InputTextField\";\r\nimport { Label } from \"../common/components/ui/label\"\r\nimport * as Yup from \"yup\";\r\nimport { Field, Formik, Form } from \"formik\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst FormValidationSchema = Yup.object({\r\n  name: Yup.string().required(\"Full name is required\"),\r\n  username: Yup.string().required(\" username is required\"),\r\n  email: Yup.string().required(\"Email is required\"),\r\n  password: Yup.string().required(\"password is required\"),\r\n});\r\n\r\nconst SignUp = (props) => {\r\n  return (\r\n    <div className=\"container mx-auto px-4 h-full\">\r\n      <div className=\"flex content-center items-center justify-center h-full\">\r\n        <div className=\"w-full lg:w-4/12 px-4\">\r\n          <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blueGray-200 border-0\">\r\n            <div className=\"rounded-t mb-0 px-6 py-6\">\r\n              <Formik\r\n                initialValues={initialState}\r\n                validationSchema={FormValidationSchema}\r\n                onSubmit={(values, { setFieldValue }) => {\r\n                  props?.handleSignUp(values);\r\n                }}\r\n              >\r\n                {({ values, setFieldValue, touched, errors }) => {\r\n                  return (\r\n                    <Form>\r\n                      <div className=\"w-full max-w-sm space-y-2\">\r\n                        <div className=\"space-y-2 text-center\">\r\n                          <div className=\"mx-auto h-8 w-auto\" />\r\n                          <div className=\"space-y-2\">\r\n                            <h1 className=\"text-3xl font-bold\">Create an account</h1>\r\n                            <p className=\"text-gray-500 dark:text-gray-400\">Enter your information to get started</p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"space-y-4\">\r\n\r\n                          <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"email\">Full Name</Label>\r\n                            <Field\r\n                              name={`name`}\r\n                              value={`${values.name}`}\r\n                              label=\"Full Name\"\r\n                              placeholder=\"Full Name\"\r\n                              required\r\n                              component={InputTextField}\r\n                              autoComplete=\"given-name\"\r\n                              fullWidth\r\n\r\n                            //error={\r\n                            //touchedItems?.apartmentUnitHouseNumber &&\r\n                            //ADDRESS_DETAILS?.apartmentUnitHouseNumber\r\n                            //}\r\n                            />\r\n                          </div>\r\n                          <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"email\">\"User Name</Label>\r\n                            <Field\r\n                              name={`username`}\r\n                              value={`${values.username}`}\r\n                              label=\"User Name\"\r\n                              placeholder=\"User Name\"\r\n                              required\r\n                              component={InputTextField}\r\n                              autoComplete=\"family-name\"\r\n                              fullWidth\r\n\r\n                            //error={\r\n                            //touchedItems?.apartmentUnitHouseNumber &&\r\n                            //ADDRESS_DETAILS?.apartmentUnitHouseNumber\r\n                            //}\r\n                            />\r\n                          </div>\r\n                          <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"email\">Email</Label>\r\n                            <Field\r\n                              name={`email`}\r\n                              value={`${values.email}`}\r\n                              label=\"Email Address\"\r\n                              placeholder=\"Email Address\"\r\n                              required\r\n                              component={InputTextField}\r\n                              autoComplete=\"email\"\r\n                              fullWidth\r\n\r\n                            //error={\r\n                            //touchedItems?.apartmentUnitHouseNumber &&\r\n                            //ADDRESS_DETAILS?.apartmentUnitHouseNumber\r\n                            //}\r\n                            />\r\n                          </div>\r\n                          <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"email\">Password</Label>\r\n                            <Field\r\n                              name={`password`}\r\n                              value={`${values.password}`}\r\n                              label=\"Password\"\r\n                              placeholder=\"Password\"\r\n                              required\r\n                              component={InputTextField}\r\n                              autoComplete=\"new-password\"\r\n                              fullWidth\r\n\r\n                            //error={\r\n                            //touchedItems?.apartmentUnitHouseNumber &&\r\n                            //ADDRESS_DETAILS?.apartmentUnitHouseNumber\r\n                            //}\r\n                            />\r\n                          </div>\r\n\r\n\r\n                          <div className=\"space-y-2\">\r\n                            <Button className=\"w-full\" type=\"submit\">Sign Up</Button>\r\n                          </div>\r\n                          <div className=\"space-y-2 w-full\" >\r\n                            <Link className=\"text-blue-500\" to=\"/login\">\r\n                              Already have an account? Sign in\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Form>\r\n                  );\r\n                }}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import SignupPage from \"../components/SignupPage\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { registerUser, validateToken } from \"../store/actions/LoginActions\";\r\nimport { useSnackbar } from \"notistack\";\r\nconst SignUp = (props) => {\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleSignUp = async (params) => {\r\n    if (params != null) {\r\n      try {\r\n        const res = await props.registerUser(params);\r\n        enqueueSnackbar(\"Signup Successful\", { variant: \"success\" });\r\n        navigate(\"/login\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SignupPage navigate={navigate} handleSignUp={handleSignUp} />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    userData: state.LoginReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    registerUser: (params) => dispatch(registerUser(params)),\r\n    validateToken: (params) => dispatch(validateToken(params)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n"],"names":["Input","React","_ref","ref","className","type","props","_jsx","cn","displayName","InputTextField","form","field","name","value","handleChange","handleBlur","label","required","multiline","placeholder","size","fullWidth","helperText","error","disabled","inputProps","id","rows","variant","onChange","onBlur","InputProps","labelVariants","cva","Label","LabelPrimitive","initialState","username","email","password","FormValidationSchema","Yup","children","Formik","initialValues","validationSchema","onSubmit","values","setFieldValue","handleSignUp","_ref2","touched","errors","Form","_jsxs","htmlFor","Field","concat","component","autoComplete","Button","Link","to","connect","state","userData","LoginReducer","dispatch","registerUser","params","validateToken","navigate","useNavigate","enqueueSnackbar","useSnackbar","SignupPage","async","err","console","log"],"sourceRoot":""}